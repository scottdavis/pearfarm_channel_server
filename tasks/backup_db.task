<?php
	require_once(__DIR__ . '/config.php');
		class backup_db_task implements PlowTask {
			public function run($args) {
			  $backuplocation = getenv('HOME') . '/backups/pearfarm/';
				$server = $args[2];
				$passphrase = isset($args[3]) ? $args[3] : '';
				switch($server) {
					case 'live':
						$server_name = 'pearfarm.org';
						$path = '/var/www/pearfarm_channel_server';
            $env = 'production';
					break;
					case 'dev':
						$server_name = 'dev.pearfarm.org';
						$path = '/var/www/pearfarm_dev';
            $env = 'staging';
					break;
				}
				
				$conn = ssh2_connect($server_name);
				$home = getenv('HOME');
				if (ssh2_auth_pubkey_file($conn, 'root',
				                          $home . '/.ssh/id_rsa.pub',
				                          $home . '/.ssh/id_rsa', $passphrase)) {
				  echo "Public Key Authentication Successful\n";
				} else {
				  die('Public Key Authentication Failed' . "\n");
				}
				//get db_settings
				$config_path = FileUtils::join($path, 'config', $env, 'database.json');
				$command = "cat $config_path";
				print("Running: $command \n");
				$stream = ssh2_exec($conn, $command);  
				stream_set_blocking($stream, true);
        $json = json_decode(stream_get_contents($stream), true);
        $db = $json[$env];		
				$date = date("Y-m-d-G:i");
        $db_backup_file = "/tmp/db-" . $date .'.sql';
        $command = "mysqldump --add-drop-database -u{$db['username']} -p{$db['password']} {$db['database']} > {$db_backup_file}";
        print("Running: Database backup! \n");
				ssh2_exec($conn, $command);
        FileUtils::mkdir_p($backuplocation);
        print("Downloading file: $db_backup_file\n");
        ssh2_scp_recv($conn , $db_backup_file , $backuplocation . "/$server-db-$date.sql");
        $command = "rm {$db_backup_file}\n";
        print("Running: $command \n");
				ssh2_exec($conn, $command);

			}
			public function name() {
				return "backup::db";
			}
			public function dependencies() {
				return array();
			}
		}

